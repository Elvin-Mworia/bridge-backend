{"version":3,"sources":["ideas.js"],"names":["router","require","Router","Ideas","axios","LocalDateTime","post","req","res","data","pitch","regeneratorRuntime","async","_context","prev","next","pitcherid","body","mysql","price","time","now","toString","awrap","create","sent","json","message","stop","sequelize","findAll","order","literal","send","listofideas","reverse","get","id","Id","_context3","params","substr","length","console","log","IdeasBought","where","customerid","t0","ideas","_context4","include","Idea","_context5","_context6","ideaid"],"mappings":"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","file":"ideas.min.js","sourcesContent":["const  router=require('express').Router();\r\nconst {Ideas}=require(\"../models\");\r\nconst {IdeasBought}=require(\"../models\");\r\nconst axios=require(\"axios\");\r\nvar LocalDateTime = require(\"@js-joda/core\").LocalDateTime;\r\nconst mysql=require('mysql2');\r\n\r\n\r\n//create an idea \r\nrouter.post(\"/create\",async(req,res)=>{\r\n    // image:req.file.path;\r\n    const data= {\r\n        pitcherid:req.body.pitcherid,\r\n        pitch:req.body.pitch,\r\n        price:req.body.price,\r\n        time:LocalDateTime.now().toString()\r\n\r\n       };\r\n   const pitch= await Ideas.create(data);\r\n    res.json({pitch:pitch,message:'pitch created'});\r\n    \r\n});\r\n//getting all ideas on first page render\r\nconst sequelize=require(\"sequelize\");\r\nconst res = require('express/lib/response');\r\nrouter.get(\"/\",async (req,res)=>{\r\n  \r\n    const  listofideas= await Ideas.findAll({order:[[sequelize.literal(\"updatedAt\")]]});\r\n      if(listofideas==null){\r\n          res.json(\"no ideas have been added!\");\r\n      }\r\n      res.send(listofideas.reverse());\r\n   \r\n      \r\n  \r\n  });\r\n\r\n//get a specific idea bought\r\nrouter.get(\"/ideasbought/:id\",async (req,res)=>{\r\n    const id=req.params.id;\r\ntry{\r\n   const Id=id.substr(1,id.length);\r\n   console.log(Id);\r\n    const pitch=await IdeasBought.findAll({where:{customerid:Id}});\r\n    res.json(pitch);\r\n    console.log(pitch);\r\n}\r\ncatch(err){\r\n    console.log(`dont panick but it seems the the id was not submitted`);\r\n\r\n}\r\n    \r\n \r\n})\r\n//inner join for finding ideas bought by a customer\r\nrouter.get(\"/ideascustomer/:id\", async (req,res)=>{\r\n    const id=req.params.id;\r\n    const Id=id.substr(1,id.length);\r\n    \r\n const ideas=await Ideas.findAll({include:[{model:IdeasBought,\r\n            required:true,where:{customerid:Id}}]});\r\n            res.json(ideas);\r\n            console.log(ideas);\r\n           \r\n    \r\n})\r\n\r\n//get a specific idea from database\r\nrouter.get(\"/ideas/:id\",async (req,res)=>{\r\n    const id=req.params.id;\r\ntry{\r\n   const Id=id.substr(1,id.length);\r\n   console.log(Id);\r\n    const Idea=await Ideas.findAll({where:{id:Id}});\r\n    res.json(Idea);\r\n}\r\ncatch(err){\r\n    console.log(err);\r\n\r\n}\r\n    \r\n \r\n})\r\n\r\n//route to update ideasbought table\r\nrouter.post(\"/bought\",async(req,res)=>{\r\n    // image:req.file.path;\r\n    const data= {\r\n        IdeaId:req.body.ideaid,\r\n        \r\n        customerid:req.body.customerid,\r\n        time:LocalDateTime.now().toString()\r\n\r\n       };\r\n   const pitch= await IdeasBought.create(data);\r\n    res.json({pitch:pitch,message:'pitch created'});\r\n    \r\n});\r\nmodule.exports=router;"]}