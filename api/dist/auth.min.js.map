{"version":3,"sources":["auth.js"],"names":["express","require","router","Router","sign","Users","post","req","res","_req$body","firstname","secondname","email","password","customer","price","plan","regeneratorRuntime","async","_context2","prev","next","body","console","log","bcrypt","hash","then","newUser","user","_newUser","_user","_context","awrap","findAll","where","t0","sent","json","lastname","create","message","concat","t1","stop","err","_req$body2","correctPassword","_context3","compare","match","send","status","id","username","accessToken","module","exports"],"mappings":"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","file":"auth.min.js","sourcesContent":["const express=require('express');\r\nconst router=express.Router();\r\nconst bcrypt=require(\"bcrypt\");\r\nconst {sign}=require(\"jsonwebtoken\");\r\n//registering\r\nconst {Users}=require(\"../models\");\r\n\r\nrouter.post(\"/register\", async (req,res)=>{ \r\n    const {firstname,secondname,email,password,customer,price}=req.body;\r\n    var plan;\r\n    // console.log(price);\r\n    if(price===\"2\" && customer===\"investor\"){\r\n      plan=\"bronze\";\r\n      \r\n      console.log(plan);\r\n    }\r\n    else if(price===\"5\"  && customer===\"investor\"){\r\n      \r\n      plan=\"silver\";\r\n      console.log(plan);\r\n    }\r\n     else if (price===\"10\" && customer===\"investor\"){\r\n      plan=\"gold\";\r\n      console.log(plan);\r\n\r\n     }\r\n     else{\r\n         plan=null;\r\n     }\r\n\r\n    // const lastname=req.body.lastname;\r\n    \r\n    // const investor=req.body.investor;\r\n    // const entreprenuer=req.body.entreprenuer;\r\n    //     const email=req.body.email;\r\n    //    const password=req.body.password;\r\n    //     const firstname=req.body.firstname;\r\n        //  console.log(password);\r\n        //  console.log(email);\r\n        //  console.log(username);\r\n  \r\n  try{\r\n    bcrypt.hash(password,10).then(async (hash)=>{\r\n        try{\r\n      if( await Users.findAll({where:{email:email}})===\"true\"){\r\n          res.json(\"Another account was registered with the email\")\r\n      }else{\r\n        if(customer===\"investor\"){\r\n            const newUser={firstname:firstname,lastname:secondname,email:email,password:hash,customer:customer,plan:plan}\r\n            const user= await Users.create(newUser);\r\n            res.json({message:`Thank ${user.firstname} for registering`});\r\n        }else{\r\n            const newUser={firstname:firstname,lastname:secondname,email:email,password:hash,customer:customer}\r\n            console.log(newUser);\r\n            const user= await Users.create(newUser);\r\n            res.json({message:`Thank ${user.firstname} for registering`});\r\n\r\n        }\r\n      }\r\n        \r\n    } catch(err){\r\n        console.log(\"another account was registered with the email,use another email please!\");\r\n    }\r\n}\r\n            \r\n        );\r\n    \r\n   \r\n}\r\n  catch(err){\r\n      console.log(err);\r\n  }\r\n     \r\n  });\r\n  \r\n\r\n\r\n\r\n//logging in\r\nrouter.post(\"/login\",async (req,res)=>{\r\nconst {email,password}=req.body;\r\n\r\nconst user=await Users.findOne({where:{email:email}});\r\n\r\nconsole.log(user);\r\n\r\n    if(user==null || user==undefined){\r\n        res.send({message:\"Username or email was not found\"});\r\n    }\r\n   \r\n\r\n\r\nconst correctPassword=user.password;\r\n\r\n\r\n\r\nbcrypt.compare(password,correctPassword).then((match)=>{\r\n    try{\r\n    if(!match){res.send({message:\"Wrong email and password combination\",status:301});\r\nconsole.log(\"logging in failed,try again!\")\r\n}\r\n    const accessToken=sign({username:user.email,id:user.id},\"ec0d54fd-d72e-4a53-aa72-b8ceabd148af\");\r\n    \r\n    res.json({accessToken:accessToken,\r\n        message:\"Logged in successfully\",username:user.firstname,\r\n    status:\"200\",\r\ncustomer:user.customer,user:user});\r\n    console.log(accessToken);\r\n console.log(\"logged in successfully.\");\r\n    }\r\n    catch(err){\r\n        console.log(\"logging in failed,try again!\");\r\n    }\r\n})\r\n\r\n});\r\nmodule.exports=router;\r\n"]}