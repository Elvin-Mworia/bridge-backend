{"version":3,"sources":["bio.js"],"names":["router","require","Router","Bio","path","post","req","res","console","log","body","Object","assign","files","id","params","Id","substr","length","undefined","uploadPath","__dirname","image","images","name","mv","err","json","message","picpath","data","profilepicture","UserId","contact","city","county","country","socialmedia","findOne","where","user","update","updated","create","get","info","module","exports"],"mappings":"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","sourcesContent":["const  router=require('express').Router();\r\nconst {Bio}=require(\"../models\");\r\nconst path=require(\"path\");\r\n\r\n\r\nrouter.post(\"/update/:id\",async (req,res)=>{\r\n    console.log(req.body);\r\n    console.log(Object.assign({},req.files));\r\n    const id=req.params.id;\r\n    const Id=id.substr(1,id.length);\r\n    let image;\r\nlet uploadPath;\r\nif(req.files==undefined || req.files==null){\r\n    uploadPath=__dirname+\"/images/\"+\"profilepic.jpg\";\r\n}\r\nelse{\r\n    // uploadPath=path.resolve(__dirname+\"../images/\")+image.name;\r\n    image=Object.assign({},req.files.images);\r\n    // uploadPath=\"/images/\"+image.name;\r\n    uploadPath=__dirname+\"/images/\"+image.name;\r\n    image.mv(uploadPath,async(err)=>{\r\n    \r\n        if(err)return res.json({message:\"could not upload the image\"});\r\n    }\r\n     \r\n    \r\n    )\r\n\r\n}\r\n\r\n\r\nconst picpath=uploadPath.substr(40,uploadPath.length);\r\nconsole.log(picpath);\r\n//console.log(image);\r\n//console.log(uploadPath);\r\nconst data={\r\n    \r\n    profilepicture:picpath,\r\n    UserId:Id,\r\n    contact: req.body.contact,\r\n    city: req.body.city,\r\n    county: req.body.county,\r\n    country: req.body.country,\r\n    socialmedia: req.body.socialmedia,\r\n   }\r\ntry{\r\n\r\n\r\nconst user=await Bio.findOne({where:{UserId:Id}})\r\nconsole.log(user);\r\nif(user!=null){\r\n    const updated= await Bio.update(data,{where:{UserId:Id}});\r\nres.json({updated})\r\n    \r\n}else{\r\n    const updated= await Bio.create(data);\r\n    res.json({updated})\r\n\r\n}\r\n\r\n\r\n\r\n}catch(err){\r\n    console.log(err);\r\n}\r\n   \r\n\r\n\r\n   \r\n})\r\n//getting data of a specific entreprenuer\r\nrouter.get(\"/data/:id\",async (req, res)=>{\r\n    const id=req.params.id;\r\n    \r\n    try{\r\n        const Id=id.substr(1,id.length);\r\n        console.log(Id);\r\n         const info=await Bio.findOne({where:{UserId:Id}});\r\n         res.json(info);\r\n         console.log(info);\r\n     }\r\n     catch(err){\r\n         console.log(`seems the id was not submitted`);\r\n     \r\n     }\r\n\r\n\r\n})\r\n\r\n\r\n\r\n\r\nmodule.exports=router;"],"file":"bio.dev.js"}