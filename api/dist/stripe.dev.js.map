{"version":3,"sources":["stripe.js"],"names":["stripe","require","process","env","secretKey","router","post","req","res","body","email","payment_method","price","console","log","plan","customers","create","invoice_settings","default_payment_method","customer","subscriptions","id","items","expand","subscription","status","client_secret","json","amount","paymentIntents","currency","metadata","integration_check","paymentIntent","module","exports"],"mappings":";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBC,OAAO,CAACC,GAAR,CAAYC,SAA9B,CAAf;;AACA,IAAMC,MAAM,GAACJ,OAAO,CAAC,SAAD,CAAP,CAAmB,QAAnB,CAAb;;AAEAI,MAAM,CAACC,IAAP,CAAY,MAAZ,EAAoB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sBACsBD,GAAG,CAACE,IAD1B,EACTC,KADS,aACTA,KADS,EACFC,cADE,aACFA,cADE,EACaC,KADb,aACaA,KADb;AAGhBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,cAAGA,KAAK,KAAG,GAAX,EAAe;AACbG,YAAAA,IAAI,GAAC,gCAAL;AAEAF,YAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACD,WAJD,MAKK,IAAGH,KAAK,KAAG,GAAX,EAAe;AAElBG,YAAAA,IAAI,GAAC,gCAAL;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACD,WAJI,MAKA;AACHA,YAAAA,IAAI,GAAC,gCAAL;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAEA;;AAlBc;AAAA,0CAoBOf,MAAM,CAACgB,SAAP,CAAiBC,MAAjB,CAAwB;AAC7CN,YAAAA,cAAc,EAAEA,cAD6B;AAE7CD,YAAAA,KAAK,EAAEA,KAFsC;AAG7CQ,YAAAA,gBAAgB,EAAE;AAChBC,cAAAA,sBAAsB,EAAER;AADR;AAH2B,WAAxB,CApBP;;AAAA;AAoBVS,UAAAA,QApBU;AAAA;AAAA,0CA8BWpB,MAAM,CAACqB,aAAP,CAAqBJ,MAArB,CAA4B;AACrDG,YAAAA,QAAQ,EAAEA,QAAQ,CAACE,EADkC;AAErDC,YAAAA,KAAK,EAAE,CAAC;AAAEX,cAAAA,KAAK,EAAEG;AAAT,aAAD,CAF8C;AAGrDS,YAAAA,MAAM,EAAE,CAAC,+BAAD;AAH6C,WAA5B,CA9BX;;AAAA;AA8BVC,UAAAA,YA9BU;AAoCVC,UAAAA,MApCU,GAoCDD,YAAY,CAAC,gBAAD,CAAZ,CAA+B,gBAA/B,EAAiD,QAAjD,CApCC;AAqCVE,UAAAA,aArCU,GAqCMF,YAAY,CAAC,gBAAD,CAAZ,CAA+B,gBAA/B,EAAiD,eAAjD,CArCN;AAuChBjB,UAAAA,GAAG,CAACoB,IAAJ,CAAS;AAAC,6BAAiBD,aAAlB;AAAiC,sBAAUD;AAA3C,WAAT;;AAvCgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB,E,CA0CA;;AACErB,MAAM,CAACC,IAAP,CAAY,MAAZ,EAAoB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,uBACKD,GAAG,CAACE,IADT,EACXC,KADW,cACXA,KADW,EACLmB,MADK,cACLA,MADK;AAAA;AAAA,0CAGU7B,MAAM,CAAC8B,cAAP,CAAsBb,MAAtB,CAA6B;AACrDY,YAAAA,MAAM,EAAEA,MAD6C;AAGrDE,YAAAA,QAAQ,EAAE,KAH2C;AAIrD;AACAC,YAAAA,QAAQ,EAAE;AAACC,cAAAA,iBAAiB,EAAE;AAApB;AAL2C,WAA7B,CAHV;;AAAA;AAGZC,UAAAA,aAHY;AAWhB1B,UAAAA,GAAG,CAACoB,IAAJ,CAAS;AAAC,6BAAiBM,aAAa,CAAC,eAAD;AAA/B,WAAT;AACArB,UAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;;AAZgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;AAkBA2B,MAAM,CAACC,OAAP,GAAe/B,MAAf","sourcesContent":["const stripe = require('stripe')(process.env.secretKey);\r\nconst router=require(\"express\")(\"Router\");\r\n\r\nrouter.post('/sub', async (req, res) => {\r\n    const {email, payment_method,price} = req.body;\r\n    var plan;\r\n    console.log(price);\r\n    if(price===\"2\"){\r\n      plan=\"price_1KQV3qIT6p7sbPTq9dyf157P\";\r\n      \r\n      console.log(plan);\r\n    }\r\n    else if(price===\"5\"){\r\n      \r\n      plan=\"price_1KQV5gIT6p7sbPTqlPwbvbyY\";\r\n      console.log(plan);\r\n    }\r\n     else{\r\n      plan=\"price_1KQV6DIT6p7sbPTqWUQmN8NP\";\r\n      console.log(plan);\r\n\r\n     }\r\n  \r\n    const customer = await stripe.customers.create({\r\n      payment_method: payment_method,\r\n      email: email,\r\n      invoice_settings: {\r\n        default_payment_method: payment_method,\r\n      \r\n        \r\n      },\r\n    });\r\n  \r\n    const subscription = await stripe.subscriptions.create({\r\n      customer: customer.id,\r\n      items: [{ price: plan}],\r\n      expand: ['latest_invoice.payment_intent']\r\n    });\r\n    \r\n    const status = subscription['latest_invoice']['payment_intent']['status'] \r\n    const client_secret = subscription['latest_invoice']['payment_intent']['client_secret']\r\n  \r\n    res.json({'client_secret': client_secret, 'status': status});\r\n  })\r\n  \r\n//payment of ideas\r\n  router.post('/pay', async (req, res) => {\r\n    const {email,amount} = req.body;\r\n    \r\n    const paymentIntent = await stripe.paymentIntents.create({\r\n        amount: amount,\r\n       \r\n        currency: 'usd',\r\n        // Verify your integration in this guide by including this parameter\r\n        metadata: {integration_check: 'accept_a_payment'},\r\n      });\r\n\r\n      res.json({'client_secret': paymentIntent['client_secret']})\r\n      console.log(res);\r\n})\r\n\r\n\r\n\r\n\r\n  module.exports=router;\r\n"],"file":"stripe.dev.js"}