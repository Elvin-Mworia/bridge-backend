{"version":3,"sources":["bio.js"],"names":["router","require","Router","Bio","patch","req","res","id","Id","data","updated","regeneratorRuntime","async","_context","prev","next","substr","length","body","email","entreprenuerid","contact","city","county","params","socialmedia","profilepicture","awrap","create","country","sent","stop","get","info","_context2","json","console","log","t0","module","exports"],"mappings":"aAAA,IAAOA,OAAOC,QAAQ,WAAWC,kBACrBD,QAAQ,aAAbE,aAAAA,IAEPH,OAAOI,MAAM,cAAc,SAAOC,EAAIC,GAAX,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OACjBR,EAAGF,EAHDJ,OAAQM,GAIVC,EAAGD,EAAGS,OAAO,EAAET,EAAGU,QAClBR,EAAK,CAHRL,MAAMC,EAAAa,KAAAC,MAAcC,eAAAZ,EAAAa,QAAAhB,EAAAa,KAAAG,QAAAC,KAAAjB,EAAAa,KAAAI,KAAAC,OAAAlB,EAAAa,KAAAK,OACjBhB,QAAGF,EAAImB,KAAOjB,QACdC,YAAMQ,EAAOE,KAAIO,YACjBhB,eAAKJ,EAAAa,KAAAQ,gBAHYb,EAAAE,KAAA,EAAAJ,mBAAAgB,MAUNT,IAAJU,OAASC,IAVC,KAAA,EAUnBA,EAVmBhB,EAAAiB,KAWnBL,EAAAA,KAAAA,CAAAA,QAAAA,IAXmB,KAAA,EAAA,IAAA,MAAA,OAAAZ,EAAAkB,YAAA/B,OAAAgC,IAAA,OAAA,SAAA3B,EAAAC,GAAA,IAAAC,EAAAC,EAAAyB,EAAA,OAAAtB,mBAAAC,MAAA,SAAAsB,GAAA,OAAA,OAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,KAAA,EAAA,OAAAR,EAAAF,EAAAmB,OAAAjB,GAAA2B,EAAApB,KAAA,EAkBjBJ,EAlBiBH,EAAAS,OAAA,EAAAT,EAAAU,QAmBvBX,QAAI6B,IAAK3B,GAnBc0B,EAAAnB,KAAA,EAAAJ,mBAAAgB,MAmBbjB,IAAAA,QAAAA,CAAAA,MAAAA,CAAAA,eAAAA,MAnBa,KAAA,EAmBbA,EAnBawB,EAAAJ,KAmBdxB,EAAT6B,KAAAF,GAWKG,QAAQC,IAAIJ,GA9BMC,EAAAnB,KAAA,GAAA,MAAA,KAAA,GAAAmB,EAAApB,KAAA,GAAAoB,EAAAI,GAAAJ,EAAA,MAAA,GAAAE,QAAAC,IAAA,yDAAA,KAAA,GAAA,IAAA,MAAA,OAAAH,EAAAH,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,QAsBTQ,OAAAC,QAAAxC","file":"bio.min.js","sourcesContent":["const  router=require('express').Router();\r\nconst {Bio}=require(\"../models\");\r\n\r\nrouter.patch(\"/update/:id\",async (req,res)=>{\r\n    const id=req.params.id;\r\n    const Id=id.substr(1,id.length);\r\n    const data={\r\n        email: req.body.email,\r\n        \r\n        entreprenuerid: Id,\r\n        contact: req.body.contact,\r\n        city: req.body.city,\r\n        county: req.body.county,\r\n        country: req.body.country,\r\n        socialmedia: req.body.socialmedia,\r\n        profilepicture: req.body.profilepicture\r\n\r\n\r\n\r\n    }\r\n\r\n    const updated= await Bio.create(data);\r\n    res.json({updated})\r\n})\r\n\r\nrouter.get(\"/:id\",async (req, res)=>{\r\n    const id=req.params.id;\r\n    \r\n    try{\r\n        const Id=id.substr(1,id.length);\r\n        console.log(Id);\r\n         const info=await Bio.findOne({where:{entreprenuerid:Id}});\r\n         res.json(info);\r\n         console.log(info);\r\n     }\r\n     catch(err){\r\n         console.log(`dont panick but it seems the the id was not submitted`);\r\n     \r\n     }\r\n\r\n\r\n})\r\n\r\n\r\n\r\n\r\nmodule.exports=router;"]}