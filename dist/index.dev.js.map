{"version":3,"sources":["index.js"],"names":["express","require","config","app","cors","db","fileupload","Auth","Pitch","Bio","Idea","User","Stripe","logger","req","res","next","console","log","upload","corOption","origin","use","json","urlencoded","extended","port","sequelize","sync","logging","force","then","listen","err"],"mappings":";;AAAA,IAAMA,OAAO,GAACC,OAAO,CAAC,SAAD,CAArB;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,IAAMC,GAAG,GAACH,OAAO,EAAjB;;AACA,IAAMI,IAAI,GAACH,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAMI,EAAE,GAACJ,OAAO,CAAC,UAAD,CAAhB;;AACA,IAAMK,UAAU,GAACL,OAAO,CAAC,oBAAD,CAAxB,C,CAEA;;;AACA,IAAMM,IAAI,GAACN,OAAO,CAAC,YAAD,CAAlB;;AACA,IAAMO,KAAK,GAACP,OAAO,CAAC,aAAD,CAAnB;;AACA,IAAMQ,GAAG,GAACR,OAAO,CAAC,WAAD,CAAjB;;AACA,IAAMS,IAAI,GAACT,OAAO,CAAC,aAAD,CAAlB;;AACA,IAAMU,IAAI,GAACV,OAAO,CAAC,YAAD,CAAlB;;AACA,IAAMW,MAAM,GAACX,OAAO,CAAC,cAAD,CAApB,C,CAMA;;;AACA,IAAMY,MAAM,GAAC,SAAPA,MAAO,CAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAgB;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAF,EAAAA,IAAI;AACN,CAHF,C,CAIC;;;AAED,IAAMG,MAAM,GAAClB,OAAO,CAAC,UAAD,CAApB,C,CAEC;;;AACA,IAAImB,SAAS,GAAC;AACXC,EAAAA,MAAM,EAAC;AADI,CAAd,C,CAID;;AACAlB,GAAG,CAACmB,GAAJ,CAAQlB,IAAI,CAACgB,SAAD,CAAZ;AACAjB,GAAG,CAACmB,GAAJ,CAAQhB,UAAU,EAAlB;AACAH,GAAG,CAACmB,GAAJ,CAAQtB,OAAO,CAACuB,IAAR,EAAR;AACApB,GAAG,CAACmB,GAAJ,CAAQtB,OAAO,CAACwB,UAAR,CAAmB;AAACC,EAAAA,QAAQ,EAAC;AAAV,CAAnB,CAAR;AAEAtB,GAAG,CAACmB,GAAJ,CAAQT,MAAR,E,CAEA;AACA;;AACAV,GAAG,CAACmB,GAAJ,CAAQ,cAAR,EAAuBtB,OAAO,UAAP,CAAe,cAAf,CAAvB,E,CAEA;;AACAG,GAAG,CAACmB,GAAJ,CAAQ,OAAR,EAAgBf,IAAhB;AACAJ,GAAG,CAACmB,GAAJ,CAAQ,QAAR,EAAiBd,KAAjB;AACAL,GAAG,CAACmB,GAAJ,CAAQ,MAAR,EAAeb,GAAf;AACAN,GAAG,CAACmB,GAAJ,CAAQ,OAAR,EAAgBZ,IAAhB;AACAP,GAAG,CAACmB,GAAJ,CAAQ,OAAR,EAAgBX,IAAhB;AACAR,GAAG,CAACmB,GAAJ,CAAQ,SAAR,EAAkBV,MAAlB;AAIA,IAAMc,IAAI,GAAC,IAAX,C,CACA;;AAEArB,EAAE,CAACsB,SAAH,CAAaC,IAAb,CAAkB;AAACC,EAAAA,OAAO,EAACZ,OAAO,CAACC,GAAjB;AAAqBY,EAAAA,KAAK,EAAC;AAA3B,CAAlB,EAAqDC,IAArD,CAA0D,YAAI;AAE1Dd,EAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AAEAf,EAAAA,GAAG,CAAC6B,MAAJ,CAAWN,IAAX,EAAgB,YAAI;AAChBT,IAAAA,OAAO,CAACC,GAAR,2BAA+BQ,IAA/B;AACP,GAFG;AAMH,CAVD,WAUS,UAAAO,GAAG;AAAA,SAAGhB,OAAO,CAACC,GAAR,gCAAoCe,GAApC,EAAH;AAAA,CAVZ","sourcesContent":["const express=require('express');\r\nrequire(\"dotenv\").config();\r\nconst app=express();\r\nconst cors=require('cors');\r\nconst db=require(\"./models\");\r\nconst fileupload=require(\"express-fileupload\")\r\n\r\n//controllers\r\nconst Auth=require(\"./api/auth\");\r\nconst Pitch=require(\"./api/pitch\");\r\nconst Bio=require(\"./api/bio\");\r\nconst Idea=require(\"./api/ideas\");\r\nconst User=require(\"./api/user\");\r\nconst Stripe=require(\"./api/stripe\");\r\n\r\n\r\n\r\n\r\n\r\n//middleware for logging out if an incoming request\r\nconst logger=(req,res,next)=>{\r\n    console.log(\"incoming request\");\r\n    next();\r\n }\r\n //for capturing files and images and storing them in the image folder\r\n\r\nconst upload=require(\"./upload\");\r\n\r\n //allowed origin which the server can accept request from\r\n var corOption={\r\n    origin:\"*\"\r\n}\r\n\r\n//setting up cors\r\napp.use(cors(corOption));\r\napp.use(fileupload())\r\napp.use(express.json());\r\napp.use(express.urlencoded({extended:true}));\r\n  \r\napp.use(logger);\r\n\r\n//static files ie profile pictures\r\n//app.use(\"./images\",express.static(\"./images\"));\r\napp.use(\"./api/images\",express.static(\"./api/images\"));\r\n\r\n//routes\r\napp.use(\"/auth\",Auth);\r\napp.use(\"/pitch\",Pitch);\r\napp.use(\"/bio\",Bio);\r\napp.use(\"/idea\",Idea);\r\napp.use(\"/user\",User);\r\napp.use(\"/stripe\",Stripe);\r\n\r\n\r\n\r\nconst port=3001;\r\n//attempting to connect to the database first before starting the server\r\n\r\ndb.sequelize.sync({logging:console.log,force:false}).then(()=>{\r\n    \r\n    console.log(\"Connection to the database established\");\r\n    \r\n    app.listen(port,()=>{\r\n        console.log(`running on port ${port}`);\r\n});\r\n\r\n\r\n\r\n}).catch(err=>(console.log(`Something went wrong ${err}`)));"],"file":"index.dev.js"}