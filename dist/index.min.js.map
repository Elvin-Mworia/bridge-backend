{"version":3,"sources":["index.js"],"names":["express","require","config","cors","fileupload","Pitch","Bio","Idea","Stripe","logger","req","res","next","upload","console","app","use","json","corOption","urlencoded","extended","Auth","User","db","sequelize","sync","logging","log","force","then","listen","port","concat","err"],"mappings":"aAAA,IAAMA,QAAQC,QAAQ,WACtBA,QAAQ,UAAUC,SADlB,IAAMF,IAAAA,UAGAG,KAAKF,QAAQ,QAFnBA,GAAQA,QAAR,YAIMG,WAAWH,QAAQ,sBAFnBE,KAAKF,QAAQ,cAMbI,MAAMJ,QAAQ,eALZK,IAACL,QAAQ,aAOXM,KAAKN,QAAQ,eANbG,KAAAA,QAAWH,cAQXO,OAAOP,QAAQ,gBAOfQ,OAAO,SAACC,EAAIC,EAAIC,GAThBL,QAAKN,IAAAA,oBAWPW,KAIEC,OAAOZ,QAAQ,YALjBa,UAAY,CACZF,OAAI,KAIRG,IAAMF,IAAAA,KAAOZ,YASbc,IAAIC,IAAIZ,cACRW,IAAIC,IAAIhB,QAAQiB,QAPfF,IAAIG,IAAAA,QAAUC,WAAA,CAAAC,UAAA,KAAAL,IAIfC,IAAAP,QAGAM,IAAIC,IAAIhB,eAARA,QAAA,OAAA,iBAC2Be,IAA3BC,IAAA,QAAAK,MAEAN,IAAIC,IAAIP,SAERJ,OACAU,IAAAC,IAAA,OAAAV,KAOAS,IAAIC,IAAI,QAAQT,MANhBQ,IAAIC,IAAI,QAAAM,MAQRP,IAAIC,IAAI,UAAUR,QAFlBO,IAAIC,KAAI,KAMRO,GAAAC,UAAWC,KACX,CAAAC,QAAAZ,QAAAa,IAAAC,OAAA,IAAAC,KAAA,WAEGL,QAAHG,IAAaF,0CAA0BG,IAAKE,OAACC,KAAA,WAAajB,QAAAa,IAAA,mBAAAK,OAAID,WAH9D,MAGA,SAAAE,GAUS,OAAAnB,QAAAmB,IAAA,wBAAAD,OAAGC","file":"index.min.js","sourcesContent":["const express=require('express');\r\nrequire(\"dotenv\").config();\r\nconst app=express();\r\nconst cors=require('cors');\r\nconst db=require(\"./models\");\r\nconst fileupload=require(\"express-fileupload\")\r\n\r\n//controllers\r\nconst Auth=require(\"./api/auth\");\r\nconst Pitch=require(\"./api/pitch\");\r\nconst Bio=require(\"./api/bio\");\r\nconst Idea=require(\"./api/ideas\");\r\nconst User=require(\"./api/user\");\r\nconst Stripe=require(\"./api/stripe\");\r\n\r\n\r\n\r\n\r\n\r\n//middleware for logging out if an incoming request\r\nconst logger=(req,res,next)=>{\r\n    console.log(\"incoming request\");\r\n    next();\r\n }\r\n //for capturing files and images and storing them in the image folder\r\n\r\nconst upload=require(\"./upload\");\r\n\r\n //allowed origin which the server can accept request from\r\n var corOption={\r\n    origin:\"*\"\r\n}\r\n\r\n//setting up cors\r\napp.use(cors(corOption));\r\napp.use(fileupload())\r\napp.use(express.json());\r\napp.use(express.urlencoded({extended:true}));\r\n  \r\napp.use(logger);\r\n\r\n//static files ie profile pictures\r\n//app.use(\"./images\",express.static(\"./images\"));\r\napp.use(\"./api/images\",express.static(\"./api/images\"));\r\n\r\n//routes\r\napp.use(\"/auth\",Auth);\r\napp.use(\"/pitch\",Pitch);\r\napp.use(\"/bio\",Bio);\r\napp.use(\"/idea\",Idea);\r\napp.use(\"/user\",User);\r\napp.use(\"/stripe\",Stripe);\r\n\r\n\r\n\r\nconst port=3001;\r\n//attempting to connect to the database first before starting the server\r\n\r\ndb.sequelize.sync({logging:console.log,force:false}).then(()=>{\r\n    \r\n    console.log(\"Connection to the database established\");\r\n    \r\n    app.listen(port,()=>{\r\n        console.log(`running on port ${port}`);\r\n});\r\n\r\n\r\n\r\n}).catch(err=>(console.log(`Something went wrong ${err}`)));"]}